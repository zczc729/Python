Python 서식 문자

1. 기본 서식 문자

C 스타일	Python3			설명
%s	{}		문자열 출력
%d	{}		정수 출력
	{:b}		표현식 없는 2진수 값 출력
%o	{:o}		표현식 없는 8진수 값 출력
%x	{:x}		표현식 없는 16진수 값 출력
%f	{:f}		실수 출력
%.2f	{:2f}		소수점 2자리 까지의 실수 출력 (%.□f}, {:□f} 등 ㅁ 안에 들어가는 숫자를 바꿔 원하는 자리수 만큼 출력 가능)
%6d	{:6}		6자리 고정 출력

2. 문자열과 정수 출력 예제
C 스타일 : print('%s':%d'%('나이',30))
Python3 : print('{}:{}'.format('나이',30))

3. 실수 출력 예제
print('%f, %.2f' %(1.123, 1.123)) -> 1.123000, 1.12
print('{:f}, {:.2f}'.format(1.123, 1.123)) -> 1.123000, 1.12
print('{:5f}'.format(1.123456)) -> 1.12346 6번째 자리 반올림

4. 진법 출력 예제
print('%o, %x, %X' % (10,10,10)) -> 소문자 인지 대문자 인지에 따라 결과값도 소문자, 대문자로 나뉘어서 출력된다
print('{:b}, {:o}'.format(10,10))
print('{:x}, {:X}'.format(10,10))

5. 고정 길이 출력 (기본적으로 오른쪽 정렬)
print('|%5d|' % 123) -> 5자리 고징인지 확인을 위한 | | 출력
print('|%5s|' % 'abc')
print('|{:5}|'.format(123)) 정수/실수 -> 오른쪽 정렬
print('|{:5}|'.format('abc')) 문자열 -> 왼쪽 정렬

6. 고정 길이의 정렬
print('|%-5d|' % 123)
print('|%5s|' % 'abc')
print('|{:<5}|'.format(123)) -> 왼쪽 정렬
print('|{:>5}|.format('abc)') -> 오른쪽 정렬
print('|{:^5}|'.format('abc')) -) 가운데 정렬

7. 여백 채우기
print('|{%05d}|' % 123) -> 0으로 여백 채움
print('|{:05}|'.format(123)) -> 0으로 여백 채움
print('|{:_>5}|'.format('abc')) -> _으로 여백 채움. 정렬 기능 필수 사용
print('|{:-^5}|'.format('abc'))

8. 정수, 실수 단위 구분
print('{:,}'.format(1000000)) -> 1000 단위로 구분
print('{:,.2f}'.format(1000000))

과제 1) 아래 출력물을 서식 문자를 활용하여 출력 하시오










